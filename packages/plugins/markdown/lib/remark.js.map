{"version":3,"file":"remark.js","names":["name","isValidIdentifierName","valueToEstree","load","parse","wrapMetadata","glob","path","yaml","readFileSync","extensions","remarkPages","ast","file","pagesFiles","sync","join","cwd","process","ignore","nodir","dot","map","resolve","mdast","imports","Error","JSON","stringify","data","node","children","value","type","files","slice","filter","filename","basename","replace","sourceBasename","dirname","substring","length","pageConfig","reduce","a","b","toString","undefined","page","layouts","layout","i","source","specifiers","local","styles","Object","entries","style","metadata","optional","callee","arguments","properties","_","_path","relative","split","delimiter","resource","kind","method","shorthand","computed","key","elements","withOnce","once","unshift","estree","sourceType","body","imported","declaration","id","params","argument","declarations","init","keys","expression","object","property","push"],"sources":["../src/remark.ts"],"sourcesContent":["import { name as isValidIdentifierName } from 'estree-util-is-identifier-name';\nimport { valueToEstree } from 'estree-util-value-to-estree';\nimport { load } from 'js-yaml';\nimport { Root, YAML } from 'mdast';\nimport { MdxjsEsm, mdxToMarkdown } from 'mdast-util-mdx';\nimport { toMarkdown } from 'mdast-util-to-markdown';\nimport { parse } from 'toml';\nimport { Plugin } from 'unified';\nimport { wrapMetadata } from '@grexie/pages-runtime-metadata';\nimport glob from 'glob';\nimport path from 'path';\nimport { createRequire } from 'module';\nimport yaml from 'yaml';\nimport { readFileSync } from 'fs';\n\nexport interface RemarkPagesOptions {\n  /**\n   * If specified, the YAML data is exported using this name. Otherwise, each\n   * object key will be used as an export name.\n   */\n  name?: string;\n}\n\nconst extensions = [\n  'yml',\n  'yaml',\n  'json',\n  'js',\n  'jsx',\n  'cjs',\n  'cjsx',\n  'mjs',\n  'mjsx',\n  'ts',\n  'tsx',\n  'cts',\n  'ctsx',\n  'mts',\n  'mtsx',\n];\n\n/**\n * A remark plugin to expose frontmatter data as getStaticProps.\n *\n * @param options - Optional options to configure the output.\n * @returns A unified transformer.\n */\nexport const remarkPages: Plugin<[RemarkPagesOptions?]> =\n  ({ name } = {}) =>\n  (ast, file) => {\n    const pagesFiles = glob\n      .sync('**/*.pages.{' + extensions.join(',') + '}', {\n        cwd: process.cwd(),\n        ignore: ['**/node_modules/**', '**/.next/**'],\n        nodir: true,\n        dot: true,\n      })\n      .map(file => path.resolve(process.cwd(), file));\n\n    const mdast = ast as Root;\n    const imports: MdxjsEsm[] = [];\n\n    if (name && !isValidIdentifierName(name)) {\n      throw new Error(\n        `If name is specified, this should be a valid identifier name, got: ${JSON.stringify(\n          name\n        )}`\n      );\n    }\n\n    let data: any;\n\n    for (const node of mdast.children) {\n      const { value } = node as YAML;\n      if (node.type === 'yaml') {\n        data = load(value);\n        break;\n        // @ts-expect-error A custom node type may be registered for TOML frontmatter data.\n      } else if (node.type === 'toml') {\n        data = parse(value);\n        break;\n      }\n    }\n\n    data = data ?? {};\n\n    const files = pagesFiles.slice().filter(filename => {\n      const basename = path.basename(filename).replace(/\\.pages\\.\\w+$/i, '');\n      const sourceBasename = file.basename!.replace(/\\.\\w+$/i, '');\n      const dirname = path.dirname(filename);\n\n      return (\n        (file.dirname?.substring(0, dirname.length) === dirname &&\n          basename === '') ||\n        (file.dirname === dirname && basename === sourceBasename)\n      );\n    });\n\n    const pageConfig = wrapMetadata(data)(\n      { filename: file.path },\n      files.reduce((a, b) => {\n        const data = yaml.parse(readFileSync(b).toString());\n        return wrapMetadata(data)({ filename: b }, a);\n      }, undefined as any)\n    ).page;\n\n    const layouts = (pageConfig?.layout ?? []).map(\n      (layout: string, i: number) =>\n        ({\n          type: 'ImportDeclaration',\n          source: { type: 'Literal', value: layout },\n          specifiers: [\n            {\n              type: 'ImportDefaultSpecifier',\n              local: {\n                type: 'Identifier',\n                name: `__pages_layout_${i}`,\n              },\n            },\n          ],\n        } as any)\n    );\n\n    const styles = Object.entries(\n      (pageConfig?.styles ?? {}) as Record<string, string>\n    ).map(\n      ([name, style]: [string, string]) =>\n        ({\n          type: 'ImportDeclaration',\n          source: { type: 'Literal', value: style },\n          specifiers: [\n            {\n              type: 'ImportDefaultSpecifier',\n              local: {\n                type: 'Identifier',\n                name,\n              },\n            },\n          ],\n        } as any)\n    );\n\n    data = { ...data };\n\n    let metadata: any = {\n      type: 'CallExpression',\n      optional: false,\n      callee: {\n        type: 'CallExpression',\n        optional: false,\n        callee: {\n          type: 'Identifier',\n          name: '__pages_wrap_metadata',\n        },\n        arguments: [valueToEstree(data)],\n      },\n      arguments: [\n        { type: 'ObjectExpression', properties: [] },\n        files.reduce(\n          (node, _, i) =>\n            ({\n              type: 'CallExpression',\n              callee: {\n                type: 'Identifier',\n                name: `__pages_metadata_${i}`,\n              },\n              arguments: [\n                {\n                  type: 'ObjectExpression',\n                  properties: [],\n                },\n                node ?? {\n                  type: 'Identifier',\n                  name: 'undefined',\n                },\n              ],\n            } as any),\n          null\n        ) ?? { type: 'Identifier', name: 'undefined' },\n      ],\n    };\n\n    const _path = path\n      .relative(path.resolve(process.cwd(), 'src', 'pages'), file.path)\n      .split(path.delimiter);\n\n    const resource = {\n      type: 'ObjectExpression',\n      properties: [\n        {\n          type: 'Property',\n          kind: 'init',\n          method: false,\n          shorthand: false,\n          computed: false,\n          key: {\n            type: 'Identifier',\n            name: 'path',\n          },\n          value: {\n            type: 'ArrayExpression',\n            elements: _path.map(name => ({ type: 'Literal', value: name })),\n          },\n        },\n        {\n          type: 'Property',\n          kind: 'init',\n          method: false,\n          shorthand: false,\n          computed: false,\n          key: {\n            type: 'Identifier',\n            name: 'slug',\n          },\n          value: {\n            type: 'Literal',\n            value: ['', ..._path].join('/'),\n          },\n        },\n        {\n          type: 'Property',\n          kind: 'init',\n          method: false,\n          shorthand: false,\n          computed: false,\n          key: {\n            type: 'Identifier',\n            name: 'metadata',\n          },\n          value: metadata,\n        },\n      ],\n    };\n\n    if (name) {\n      metadata = name\n        ? {\n            type: 'ObjectExpression',\n            properties: [\n              {\n                type: 'Property',\n                kind: 'init',\n                method: false,\n                shorthand: false,\n                computed: false,\n                key: {\n                  type: 'Identifier',\n                  name,\n                },\n                value: metadata,\n              },\n            ],\n          }\n        : metadata;\n    }\n\n    const withOnce = (node: any) => {\n      if (!pageConfig?.once) {\n        return node;\n      }\n\n      return {\n        type: 'CallExpression',\n        callee: { type: 'Identifier', name: '__pages_with_once' },\n        arguments: [node],\n      };\n    };\n\n    imports.unshift({\n      type: 'mdxjsEsm',\n      value: '',\n      data: {\n        estree: {\n          type: 'Program',\n          sourceType: 'module',\n          body: [\n            ...(pageConfig?.once\n              ? [\n                  {\n                    type: 'ImportDeclaration',\n                    source: {\n                      type: 'Literal',\n                      value: '@grexie/pages',\n                    },\n                    specifiers: [\n                      {\n                        type: 'ImportSpecifier',\n                        imported: { type: 'Identifier', name: 'withOnce' },\n                        local: {\n                          type: 'Identifier',\n                          name: '__pages_with_once',\n                        },\n                      },\n                    ],\n                  },\n                ]\n              : []),\n            {\n              type: 'ImportDeclaration',\n              source: {\n                type: 'Literal',\n                value: 'react/jsx-runtime',\n              },\n              specifiers: [\n                {\n                  type: 'ImportSpecifier',\n                  imported: { type: 'Identifier', name: 'jsx' },\n                  local: { type: 'Identifier', name: '__pages_jsx' },\n                },\n              ],\n            },\n            {\n              type: 'ImportDeclaration',\n              source: {\n                type: 'Literal',\n                value: '@grexie/pages',\n              },\n              specifiers: [\n                {\n                  type: 'ImportSpecifier',\n                  imported: { type: 'Identifier', name: 'wrapDocument' },\n                  local: { type: 'Identifier', name: '__pages_wrap_document' },\n                },\n                {\n                  type: 'ImportSpecifier',\n                  imported: { type: 'Identifier', name: 'wrapResource' },\n                  local: { type: 'Identifier', name: '__pages_wrap_resource' },\n                },\n              ],\n            },\n            ...layouts,\n            ...styles,\n            {\n              type: 'ImportDeclaration',\n              source: {\n                type: 'Literal',\n                value: '@grexie/pages-runtime-metadata',\n              },\n              specifiers: [\n                {\n                  type: 'ImportSpecifier',\n                  imported: { type: 'Identifier', name: 'wrapMetadata' },\n                  local: { type: 'Identifier', name: '__pages_wrap_metadata' },\n                },\n              ],\n            },\n            ...files.map(\n              (file, i) =>\n                ({\n                  type: 'ImportDeclaration',\n                  source: { type: 'Literal', value: file },\n                  specifiers: [\n                    {\n                      type: 'ImportDefaultSpecifier',\n                      local: {\n                        type: 'Identifier',\n                        name: `__pages_metadata_${i}`,\n                      },\n                    },\n                  ],\n                } as any)\n            ),\n            {\n              type: 'ExportNamedDeclaration',\n              specifiers: [],\n              declaration: {\n                type: 'FunctionDeclaration',\n                id: { type: 'Identifier', name: 'getStaticProps' },\n                params: [],\n                body: {\n                  type: 'BlockStatement',\n                  body: [\n                    {\n                      type: 'ReturnStatement',\n                      argument: {\n                        type: 'ObjectExpression',\n                        properties: [\n                          {\n                            type: 'Property',\n                            kind: 'init',\n                            method: false,\n                            shorthand: false,\n                            computed: false,\n                            key: { type: 'Identifier', name: 'props' },\n                            value: metadata,\n                          },\n                        ],\n                      },\n                    },\n                  ],\n                },\n              },\n            },\n            {\n              type: 'ExportNamedDeclaration',\n              specifiers: [],\n              declaration: {\n                type: 'VariableDeclaration',\n                kind: 'const',\n                declarations: [\n                  {\n                    type: 'VariableDeclarator',\n                    id: { type: 'Identifier', name: 'resource' },\n                    init: resource,\n                  },\n                ],\n              },\n            },\n            {\n              type: 'ExportNamedDeclaration',\n              specifiers: [],\n              declaration: {\n                type: 'VariableDeclaration',\n                kind: 'const',\n                declarations: [\n                  {\n                    type: 'VariableDeclarator',\n                    id: { type: 'Identifier', name: 'Component' },\n                    init: {\n                      type: 'CallExpression',\n                      callee: {\n                        type: 'Identifier',\n                        name: '__pages_wrap_resource',\n                      },\n                      arguments: [\n                        withOnce({\n                          type: 'FunctionDeclaration',\n                          id: { type: 'Identifier', name: '__pages_component' },\n                          params: [{ type: 'Identifier', name: 'props' }],\n                          body: {\n                            type: 'BlockStatement',\n                            body: [\n                              ...Object.keys(pageConfig?.styles ?? {}).map(\n                                name => ({\n                                  type: 'ExpressionStatement',\n                                  expression: {\n                                    type: 'CallExpression',\n                                    callee: {\n                                      type: 'MemberExpression',\n                                      object: { type: 'Identifier', name },\n                                      property: {\n                                        type: 'Identifier',\n                                        name: 'use',\n                                      },\n                                    },\n                                    arguments: [],\n                                  },\n                                })\n                              ),\n                              {\n                                type: 'ReturnStatement',\n                                argument: {\n                                  type: 'MemberExpression',\n                                  object: { type: 'Identifier', name: 'props' },\n                                  property: {\n                                    type: 'Identifier',\n                                    name: 'children',\n                                  },\n                                },\n                              },\n                            ],\n                          },\n                        }),\n                        { type: 'Identifier', name: 'resource' },\n                      ],\n                    },\n                  },\n                ],\n              },\n            },\n            {\n              type: 'ExportDefaultDeclaration',\n              specifiers: [],\n              declaration: {\n                type: 'CallExpression',\n                callee: { type: 'Identifier', name: '__pages_wrap_document' },\n                arguments: [\n                  {\n                    type: 'FunctionDeclaration',\n                    id: { type: 'Identifier', name: 'Page' },\n                    params: [{ type: 'Identifier', name: 'props' }],\n                    body: {\n                      type: 'BlockStatement',\n                      body: [\n                        {\n                          type: 'ReturnStatement',\n                          argument: (\n                            (pageConfig?.layout ?? []) as string[]\n                          ).reduce(\n                            (node, _, i) => ({\n                              type: 'CallExpression',\n                              callee: {\n                                type: 'Identifier',\n                                name: '__pages_jsx',\n                              },\n                              arguments: [\n                                {\n                                  type: 'Identifier',\n                                  name: `__pages_layout_${i}`,\n                                },\n                                {\n                                  type: 'ObjectExpression',\n                                  properties: [\n                                    {\n                                      type: 'Property',\n                                      kind: 'init',\n                                      method: false,\n                                      shorthand: false,\n                                      computed: false,\n                                      key: {\n                                        type: 'Identifier',\n                                        name: 'children',\n                                      },\n                                      value: node,\n                                    },\n                                  ],\n                                },\n                              ],\n                            }),\n                            {\n                              type: 'CallExpression',\n                              callee: {\n                                type: 'Identifier',\n                                name: '__pages_jsx',\n                              },\n                              arguments: [\n                                {\n                                  type: 'Identifier',\n                                  name: `Component`,\n                                },\n                                {\n                                  type: 'ObjectExpression',\n                                  properties: [\n                                    {\n                                      type: 'Property',\n                                      kind: 'init',\n                                      method: false,\n                                      shorthand: false,\n                                      computed: false,\n                                      key: {\n                                        type: 'Identifier',\n                                        name: 'children',\n                                      },\n                                      value: {\n                                        type: 'MemberExpression',\n                                        object: {\n                                          type: 'Identifier',\n                                          name: 'props',\n                                        },\n                                        property: {\n                                          type: 'Identifier',\n                                          name: 'children',\n                                        },\n                                      },\n                                    },\n                                  ],\n                                },\n                              ],\n                            } as any\n                          ),\n                        },\n                      ],\n                    },\n                  },\n                  { type: 'Identifier', name: 'resource' },\n                ],\n              },\n            },\n            {\n              type: 'ExportNamedDeclaration',\n              specifiers: [],\n              declaration: {\n                type: 'VariableDeclaration',\n                kind: 'const',\n                declarations: [\n                  {\n                    type: 'VariableDeclarator',\n                    id: { type: 'Identifier', name },\n                    init: metadata,\n                  },\n                ],\n              },\n            },\n          ],\n        },\n      },\n    });\n\n    mdast.children.push(...imports);\n  };\n"],"mappings":"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"}